version: '3'

services:
  # redis is used by app and celery to exchange background task information
  redis:
    image: redis:alpine
    environment:
      REDIS_APPENDONLY: "yes"
    volumes:
      - redis:/data
    expose:
      - 6379

  # this service builds the image used by celery and app and exits afterwards
  build:
    image: app
    build: .

  # celery executes playbooks in the background
  # we need to pass through the ansible project path that contains the playbooks,
  # the ssh keys to connect to remote hosts and the proxmox inventory script
  celery:
    image: app
    restart: unless-stopped
    environment:
      ANSIBLE_PROJECT_PATH: /ansible
      CELERY_BROKER_URL: redis://redis
      CELERY_RESULT_BACKEND: redis://redis
    volumes:
      - /home/ansible/clustarr/ansible:/ansible:ro
      - /home/ansible/.ssh:/root/.ssh/:ro
      - /etc/ansible/proxmox.py:/etc/ansible/proxmox.py:ro
      - /etc/ansible/proxmox.json:/etc/ansible/proxmox.json:ro
    user: guest
    depends_on:
      - build
      - redis
    command: celery worker --app clustarr_backend.celery --loglevel=info

  # flower provides a task api for celery
  flower:
    image: app
    restart: unless-stopped
    ports:
      - 5555:5555
    environment:
      CELERY_BROKER_URL: redis://redis
      CELERY_RESULT_BACKEND: redis://redis
    depends_on:
      - build
      - redis
    command: celery flower --app clustarr_backend.celery --persistent --loglevel=info

  # flask provides the api and forwards playbook tasks to the celery service
  flask:
    image: app
    restart: unless-stopped
    ports:
      - 5000:5000
    environment:
      ANSIBLE_PROJECT_PATH: /ansible
      CELERY_BROKER_URL: redis://redis
      CELERY_RESULT_BACKEND: redis://redis
    volumes:
      - /home/ansible/clustarr/ansible:/ansible:ro
      - /etc/ansible/proxmox.py:/etc/ansible/proxmox.py:ro
      - /etc/ansible/proxmox.json:/etc/ansible/proxmox.json:ro
    depends_on:
      - build
      - celery
    command: gunicorn --bind 0.0.0.0:5000 clustarr_backend:app

volumes:
  redis:
